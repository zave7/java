Error				
	1.문법에러		
	2.논리에러		
	3.시스템에러	

Exception Handling (예외 처리)
	어떤경우에 에러가 날때 처리
					
	Exception 		
		- Runtime Excetion O
			예외처리 X. 로직으로 처리한다
		- Runtime Excetion X
			-> 반드시 코드상에서 예외처리를 해야한다
				1. throws
					throws 하면 클라이언트 오브젝트에서 예외 처리를 해야한다.
					각각의 클라이언트 오브젝트들의 예외처리는 다 다를수 있다.
				2. try { // 각각의 클라이언트 오브젝트에 공통의 로직 처리가 적용된다. 
					예외가 발생할 수 있는 코드 
					} catch { 
					예외가 발생했을 때 실행할 코드 
					} finally {
					예외가 발생하던 발생하지 않던 무조건 실행할 코드
					}
					※ catch는 다중 캐치가 가능하다
					  1) 상위 exception 이 하위 exception 보다 먼저 올 수 없다
					  2) 서로 상속관계가 아니면 순서 상관 없다
					  
					  ArithmeticException
					  ArrayIndexOutOfBoundsException
					  ClassCastException
					  ClassNotFoundException
					  IllegalAccessException // 접근제어자
					  IllegalArgumentException // 인자값 잘못
					  IndexOutOfBoundsException // 범위 잘못 됐을때
					  NullPointerException // 에러의 원인이 광범위 하다!!